package kanban

import "github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"

templ Page[C Card](cfg *Config[C]) {
	@layouts.Authenticated(layouts.AuthenticatedProps{
		BaseProps: layouts.BaseProps{Title: cfg.Board.Title()},
	}) {
		@Content(cfg)
	}
}

templ Content[C Card](cfg *Config[C]) {
	<style>
		.sortable-ghost {
			opacity: 0.4;
		}
	</style>
	<div x-data="kanban" class="contents">
		<div class="hidden" id="column-trigger" hx-post={ cfg.ColumnChangeURL } hx-trigger="columnChanged" hx-swap="none" hx-push-url="false" hx-include="this">
			<input type="hidden" name="colKey" x-model="col.key"/>
			<input type="hidden" name="colOldIndex" x-model="col.oldIndex"/>
			<input type="hidden" name="colNewIndex" x-model="col.newIndex"/>
		</div>
		<div class="hidden" id="card-trigger" hx-post={ cfg.CardChangeURL } hx-trigger="cardChanged" hx-swap="none" hx-push-url="false" hx-include="this">
			<input type="hidden" name="cardKey" x-model="card.key"/>
			<input type="hidden" name="cardOldCol" x-model="card.oldCol"/>
			<input type="hidden" name="cardNewCol" x-model="card.newCol"/>
			<input type="hidden" name="cardOldIndex" x-model="card.oldIndex"/>
			<input type="hidden" name="cardNewIndex" x-model="card.newIndex"/>
		</div>
		<div class="flex bg-gray-200 rounded-lg h-full">
			<ol
				class="flex divide-x divide-gray-300 w-full overflow-x-auto"
				x-sort.ghost
				x-sort:config="{
					onEnd: (event) => {
						changeCol({
							key: event.item.dataset.colKey,
							oldIndex: event.oldIndex,
							newIndex: event.newIndex
						});
						$nextTick(() => htmx.trigger('#column-trigger', 'columnChanged'));
					}
				}"
			>
				for _, c := range cfg.Board.Columns() {
					<li data-col-key={ c.Key() } x-sort:item class="flex flex-col gap-2 p-3 basis-72 shrink-0 flex-1">
						<header class="font-medium">
							@c.Title()
						</header>
						<ol
							class="flex flex-col gap-2 h-full"
							data-col-key={ c.Key() }
							x-sort.ghost
							x-sort:group="cards"
							x-sort:config="{onEnd: (event) => {
								changeCard({
									key: event.item.dataset.cardKey,
									newCol: event.to.dataset.colKey,
									oldCol: event.from.dataset.colKey,
									oldIndex: event.oldIndex,
									newIndex: event.newIndex
								})
								$nextTick(() => htmx.trigger('#card-trigger', 'cardChanged'));
							}}"
						>
							for _, card := range c.Cards() {
								<li class="cursor-pointer" data-card-key={ card.Key() } x-sort:item>
									@card.Component()
								</li>
							}
						</ol>
					</li>
				}
			</ol>
		</div>
	</div>
}
