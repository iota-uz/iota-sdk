package table

import (
	"github.com/iota-uz/iota-sdk/pkg/composables"
	"github.com/iota-uz/iota-sdk/pkg/htmx"
)

// ContentHTMX handles HTMX requests for tables, returning the appropriate component
// based on the request type (sort, filter, infinite scroll, or full page)
templ ContentHTMX(config *TableConfig) {
	{{
		// Get request parameters
		params, _ := composables.UseParams(ctx)
		hxTarget := ""
		isHtmxRequest := false

		if params != nil && params.Request != nil {
			hxTarget = params.Request.Header.Get("HX-Target")
			isHtmxRequest = htmx.IsHxRequest(params.Request)
		}
	}}
	if isHtmxRequest {
		// HTMX request - handle based on target
		if hxTarget == "sortable-table-container" {
			// Sort request - return full table to update headers
			@Table(config)
		} else {
			// Filter/search or infinite scroll - return only rows
			@Rows(config)
		}
	} else {
		// Full page request - return complete page with layout
		@Page(config)
	}
}
