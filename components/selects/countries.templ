// Package selects provides specialized select components for common use cases.
//
// It includes pre-configured select components for country selection
// and other common dropdown use cases.
package selects

import (
	"github.com/iota-uz/iota-sdk/components/base"
	"github.com/iota-uz/iota-sdk/modules/core/domain/value_objects/country"
	"github.com/iota-uz/iota-sdk/pkg/composables"
)

// CountriesSelectProps defines the properties for the CountriesSelect component.
type CountriesSelectProps struct {
	Label       string           // Label text for the select
	Placeholder string           // Placeholder text when no option is selected
	Name        string           // Name attribute for form submission
	Selected    string           // Pre-selected country code
	Error       string           // Error message to display
	Required    bool             // Whether the field is required
	Class       string           // Additional CSS classes
	Attrs       templ.Attributes // Additional HTML attributes
}

// CountriesSelect renders a select dropdown with a list of countries.
// Countries are translated according to the current locale.
templ CountriesSelect(props CountriesSelectProps) {
	{{
		pageCtx := composables.UsePageCtx(ctx)
		attrs := templ.Attributes{
			"name":     props.Name,
			"required": props.Required,
		}
		for k, v := range props.Attrs {
			attrs[k] = v
		}
	}}
	@base.Select(&base.SelectProps{
		Label:       props.Label,
		Placeholder: props.Placeholder,
		Class:       props.Class,
		Error:       props.Error,
		Attrs:       attrs,
	}) {
		for _, c := range country.AllCountries {
			<option
				value={ c.String() }
				selected?={ props.Selected == c.String() }
			>
				{ pageCtx.T("Countries." + c.String()) }
			</option>
		}
	}
}
