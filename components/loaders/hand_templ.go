// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
// Package loaders provides loading animation components.

//

// It contains visual indicator components to show that content

// is loading or an operation is in progress.

package loaders

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// Hand renders a hand-shaped loading animation.
// It's a stylized animation for use during loading states, providing
// visual feedback to users while content or data is being processed.
func Hand() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"ü§ö\"><div class=\"üëâ\"></div><div class=\"üëâ\"></div><div class=\"üëâ\"></div><div class=\"üëâ\"></div><div class=\"üå¥\"></div><div class=\"üëç\"></div></div><style>\n\t\t\t.ü§ö {\n\t\t\t  --skin-color: #E4C560;\n\t\t\t  --tap-speed: 0.6s;\n\t\t\t  --tap-stagger: 0.1s;\n\t\t\t  position: relative;\n\t\t\t  width: 80px;\n\t\t\t  height: 60px;\n\t\t\t  margin-left: 80px;\n\t\t\t}\n\n\t\t\t.ü§ö:before {\n\t\t\t  content: '';\n\t\t\t  display: block;\n\t\t\t  width: 180%;\n\t\t\t  height: 75%;\n\t\t\t  position: absolute;\n\t\t\t  top: 70%;\n\t\t\t  right: 20%;\n\t\t\t  background-color: black;\n\t\t\t  border-radius: 40px 10px;\n\t\t\t  filter: blur(10px);\n\t\t\t  opacity: 0.3;\n\t\t\t}\n\n\t\t\t.üå¥ {\n\t\t\t  display: block;\n\t\t\t  width: 100%;\n\t\t\t  height: 100%;\n\t\t\t  position: absolute;\n\t\t\t  top: 0;\n\t\t\t  left: 0;\n\t\t\t  background-color: var(--skin-color);\n\t\t\t  border-radius: 10px 40px;\n\t\t\t}\n\n\t\t\t.üëç {\n\t\t\t  position: absolute;\n\t\t\t  width: 120%;\n\t\t\t  height: 38px;\n\t\t\t  background-color: var(--skin-color);\n\t\t\t  bottom: -18%;\n\t\t\t  right: 1%;\n\t\t\t  transform-origin: calc(100% - 20px) 20px;\n\t\t\t  transform: rotate(-20deg);\n\t\t\t  border-radius: 30px 20px 20px 10px;\n\t\t\t  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\n\t\t\t  border-left: 2px solid rgba(0, 0, 0, 0.1);\n\t\t\t}\n\n\t\t\t.üëç:after {\n\t\t\t  width: 20%;\n\t\t\t  height: 60%;\n\t\t\t  content: '';\n\t\t\t  background-color: rgba(255, 255, 255, 0.3);\n\t\t\t  position: absolute;\n\t\t\t  bottom: -8%;\n\t\t\t  left: 5px;\n\t\t\t  border-radius: 60% 10% 10% 30%;\n\t\t\t  border-right: 2px solid rgba(0, 0, 0, 0.05);\n\t\t\t}\n\n\t\t\t.üëâ {\n\t\t\t  position: absolute;\n\t\t\t  width: 80%;\n\t\t\t  height: 35px;\n\t\t\t  background-color: var(--skin-color);\n\t\t\t  bottom: 32%;\n\t\t\t  right: 64%;\n\t\t\t  transform-origin: 100% 20px;\n\t\t\t  animation-duration: calc(var(--tap-speed) * 2);\n\t\t\t  animation-timing-function: ease-in-out;\n\t\t\t  animation-iteration-count: infinite;\n\t\t\t  transform: rotate(10deg);\n\t\t\t}\n\n\t\t\t.üëâ:before {\n\t\t\t  content: '';\n\t\t\t  position: absolute;\n\t\t\t  width: 140%;\n\t\t\t  height: 30px;\n\t\t\t  background-color: var(--skin-color);\n\t\t\t  bottom: 8%;\n\t\t\t  right: 65%;\n\t\t\t  transform-origin: calc(100% - 20px) 20px;\n\t\t\t  transform: rotate(-60deg);\n\t\t\t  border-radius: 20px;\n\t\t\t}\n\n\t\t\t.üëâ:nth-child(1) {\n\t\t\t  animation-delay: 0;\n\t\t\t  filter: brightness(70%);\n\t\t\t  animation-name: tap-upper-1;\n\t\t\t}\n\n\t\t\t.üëâ:nth-child(2) {\n\t\t\t  animation-delay: var(--tap-stagger);\n\t\t\t  filter: brightness(80%);\n\t\t\t  animation-name: tap-upper-2;\n\t\t\t}\n\n\t\t\t.üëâ:nth-child(3) {\n\t\t\t  animation-delay: calc(var(--tap-stagger) * 2);\n\t\t\t  filter: brightness(90%);\n\t\t\t  animation-name: tap-upper-3;\n\t\t\t}\n\n\t\t\t.üëâ:nth-child(4) {\n\t\t\t  animation-delay: calc(var(--tap-stagger) * 3);\n\t\t\t  filter: brightness(100%);\n\t\t\t  animation-name: tap-upper-4;\n\t\t\t}\n\n\t\t\t@keyframes tap-upper-1 {\n\t\t\t  0%, 50%, 100% {\n\t\t\t\ttransform: rotate(10deg) scale(0.4);\n\t\t\t  }\n\n\t\t\t  40% {\n\t\t\t\ttransform: rotate(50deg) scale(0.4);\n\t\t\t  }\n\t\t\t}\n\n\t\t\t@keyframes tap-upper-2 {\n\t\t\t  0%, 50%, 100% {\n\t\t\t\ttransform: rotate(10deg) scale(0.6);\n\t\t\t  }\n\n\t\t\t  40% {\n\t\t\t\ttransform: rotate(50deg) scale(0.6);\n\t\t\t  }\n\t\t\t}\n\n\t\t\t@keyframes tap-upper-3 {\n\t\t\t  0%, 50%, 100% {\n\t\t\t\ttransform: rotate(10deg) scale(0.8);\n\t\t\t  }\n\n\t\t\t  40% {\n\t\t\t\ttransform: rotate(50deg) scale(0.8);\n\t\t\t  }\n\t\t\t}\n\n\t\t\t@keyframes tap-upper-4 {\n\t\t\t  0%, 50%, 100% {\n\t\t\t\ttransform: rotate(10deg) scale(1);\n\t\t\t  }\n\n\t\t\t  40% {\n\t\t\t\ttransform: rotate(50deg) scale(1);\n\t\t\t  }\n\t\t\t}\n\t\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
