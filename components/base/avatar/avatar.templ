package avatar

import (
	"fmt"
	twmerge "github.com/Oudwins/tailwind-merge-go"
)

type Variant string

const (
	Round  Variant = "Round"
	Square Variant = "Square"
)

// TODO: come back to this and use the colors from the theme
var (
	colors = []string{
		"#695EFF",
		"#1CD6A5",
		"#544BCC",
		"#88CDFF",
		"#4A42B2",
		"#94A3B8",
		"#F6AE42",
		"#131313",
	}
)

func computeHashColor(name string) string {
	hash := 0
	for i := 0; i < len(name); i++ {
		hash = int(name[i]) + ((hash << 5) - hash)
	}
	return colors[hash%len(colors)]
}

type Props struct {
	Class    templ.CSSClasses
	ImageURL string
	Initials string
	Variant  Variant
}

templ Avatar(props Props) {
	<div
		class={
			twmerge.Merge(
				// TODO: sizes should be enums
				"w-9 h-9 font-medium flex items-center justify-center cursor-pointer text-white",
				props.Class.String(),
			),
			templ.KV("rounded-full", props.Variant != Square),
			templ.KV("rounded-lg", props.Variant == Square),
		}
		style={ templ.SafeCSS(fmt.Sprintf("background-color: %s", computeHashColor(props.Initials))) }
	>
		if props.ImageURL != "" {
			<img
				src={ props.ImageURL }
				alt="Avatar"
				class={
					twmerge.Merge(
						"w-9 h-9 object-cover",
					),
					templ.KV("rounded-full", props.Variant != Square),
					templ.KV("rounded-lg", props.Variant == Square),
				}
			/>
		} else {
			{ props.Initials }
		}
	</div>
}
