// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

import (
	"time"

	"github.com/iota-uz/iota-sdk/modules/core/domain/entities/upload"
)

type CreateProductsFromTags struct {
	PositionID string   `json:"positionId"`
	Tags       []string `json:"tags"`
}

type InventoryItem struct {
	PositionID string `json:"positionId"`
	Found      int    `json:"found"`
}

type InventoryPosition struct {
	ID    string   `json:"id"`
	Title string   `json:"title"`
	Tags  []string `json:"tags"`
}

type Mutation struct {
}

type Order struct {
	ID        string       `json:"id"`
	Type      string       `json:"type"`
	Status    string       `json:"status"`
	Items     []*OrderItem `json:"items"`
	CreatedAt time.Time    `json:"createdAt"`
}

type OrderItem struct {
	Position *WarehousePosition `json:"position"`
	Products []*Product         `json:"products"`
	Quantity int                `json:"quantity"`
}

type OrderQuery struct {
	Type   *string  `json:"type,omitempty"`
	Status *string  `json:"status,omitempty"`
	Limit  int      `json:"limit"`
	Offset int      `json:"offset"`
	SortBy []string `json:"sortBy,omitempty"`
}

type PaginatedOrders struct {
	Data  []*Order `json:"data"`
	Total string   `json:"total"`
}

type PaginatedProducts struct {
	Data  []*Product `json:"data"`
	Total string     `json:"total"`
}

type PaginatedUsers struct {
	Data  []*User `json:"data"`
	Total string  `json:"total"`
}

type PaginatedWarehousePositions struct {
	Data  []*WarehousePosition `json:"data"`
	Total string               `json:"total"`
}

type Product struct {
	ID         string             `json:"id"`
	Position   *WarehousePosition `json:"position"`
	PositionID string             `json:"positionID"`
	Rfid       string             `json:"rfid"`
	Status     string             `json:"status"`
	CreatedAt  time.Time          `json:"createdAt"`
	UpdatedAt  time.Time          `json:"updatedAt"`
}

type Query struct {
}

type Session struct {
	Token     string    `json:"token"`
	UserID    string    `json:"userId"`
	IP        string    `json:"ip"`
	UserAgent string    `json:"userAgent"`
	ExpiresAt time.Time `json:"expiresAt"`
	CreatedAt time.Time `json:"createdAt"`
}

type Subscription struct {
}

type Upload struct {
	ID       string            `json:"id"`
	URL      string            `json:"url"`
	Hash     string            `json:"hash"`
	Path     string            `json:"path"`
	Name     string            `json:"name"`
	Mimetype string            `json:"mimetype"`
	Type     upload.UploadType `json:"type"`
	Size     int               `json:"size"`
}

type UploadFilter struct {
	MimeType       *string            `json:"mimeType,omitempty"`
	MimeTypePrefix *string            `json:"mimeTypePrefix,omitempty"`
	Type           *upload.UploadType `json:"type,omitempty"`
}

type User struct {
	ID         string    `json:"id"`
	FirstName  string    `json:"firstName"`
	LastName   string    `json:"lastName"`
	Email      string    `json:"email"`
	UILanguage string    `json:"uiLanguage"`
	UpdatedAt  time.Time `json:"updatedAt"`
	CreatedAt  time.Time `json:"createdAt"`
}

type ValidateProductsResult struct {
	Valid   []string `json:"valid"`
	Invalid []string `json:"invalid"`
}

type WarehousePosition struct {
	ID        string    `json:"id"`
	Title     string    `json:"title"`
	Barcode   string    `json:"barcode"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}
