// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Toast() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col gap-4 p-6 bg-white dark:bg-neutral-900 rounded-lg\"><div class=\"space-y-2\"><h3 class=\"text-lg font-semibold text-neutral-900 dark:text-white\">Toast Notifications</h3><p class=\"text-sm text-neutral-600 dark:text-neutral-400\">Click the buttons below to trigger different types of toast notifications.</p></div><div class=\"flex flex-wrap gap-3\"><button @click=\"$dispatch(&#39;notify&#39;, {variant: &#39;success&#39;, title: &#39;Success!&#39;, message: &#39;Your changes have been saved successfully.&#39;})\" class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-green-600 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors\">Show Success</button> <button @click=\"$dispatch(&#39;notify&#39;, {variant: &#39;error&#39;, title: &#39;Error!&#39;, message: &#39;Something went wrong. Please try again.&#39;})\" class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white !bg-red-600 rounded-lg hover:!bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\">Show Error</button> <button @click=\"$dispatch(&#39;notify&#39;, {variant: &#39;warning&#39;, title: &#39;Warning!&#39;, message: &#39;This action cannot be undone.&#39;})\" class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-yellow-600 rounded-lg hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 transition-colors\">Show Warning</button> <button @click=\"$dispatch(&#39;notify&#39;, {variant: &#39;info&#39;, title: &#39;Information&#39;, message: &#39;Here is some useful information for you.&#39;})\" class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\">Show Info</button></div><div class=\"mt-4 space-y-2\"><h4 class=\"text-sm font-semibold text-neutral-900 dark:text-white\">HTMX Usage Example</h4><p class=\"text-sm text-neutral-600 dark:text-neutral-400\">Use the following button to trigger a toast from an HTMX request:</p><button hx-post=\"/_dev/api/showcase/toast-example\" hx-swap=\"none\" class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-neutral-900 dark:text-white bg-neutral-200 dark:bg-neutral-800 rounded-lg hover:bg-neutral-300 dark:hover:bg-neutral-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-neutral-500 transition-colors\">Trigger from Server</button></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
