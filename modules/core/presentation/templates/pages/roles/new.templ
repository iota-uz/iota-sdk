package roles

import (
	"github.com/iota-uz/iota-sdk/components/base/button"
	"github.com/iota-uz/iota-sdk/components/base/card"
	"github.com/iota-uz/iota-sdk/components/base/input"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/modules/core/presentation/viewmodels"
	"github.com/iota-uz/iota-sdk/pkg/composables"
)

type CreateFormProps struct {
	Role                     *viewmodels.Role
	ResourcePermissionGroups []*viewmodels.ResourcePermissionGroup
	Errors                   map[string]string
}

templ CreateForm(props *CreateFormProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	<form
		class="flex flex-col justify-between h-[calc(100vh-4rem)]"
		hx-post="/roles"
		hx-swap="outerHTML"
		hx-indicator="#save-btn"
	>
		<div class="flex-1 overflow-y-auto flex flex-col gap-5 p-6">
			@card.Card(card.Props{
				Class: "space-y-3",
			}) {
				@input.Text(&input.Props{
					Label:       pageCtx.T("Roles.Single.Name.Label"),
					Placeholder: pageCtx.T("Roles.Single.Name.Placeholder"),
					Attrs: templ.Attributes{
						"name":  "Name",
						"value": props.Role.Name,
					},
					Error: props.Errors["Name"],
				})
				@input.TextArea(&input.TextAreaProps{
					Label:       pageCtx.T("Roles.Single._Description.Label"),
					Placeholder: pageCtx.T("Roles.Single._Description.Placeholder"),
					Attrs: templ.Attributes{
						"name": "Description",
						"rows": "4",
					},
					Value: props.Role.Description,
					Error: props.Errors["Description"],
				})
			}
			for i, resourceGroup := range props.ResourcePermissionGroups {
				@card.Card(card.Props{
					Class: "space-y-3",
				}) {
					@ResourceGroup(ResourceGroupProps{
						PageContext:   pageCtx,
						ResourceGroup: resourceGroup,
						GroupIndex:    i,
					})
				}
			}
		</div>
		<div class="h-20 shadow-t-lg border-t w-full flex items-center justify-end px-8 bg-surface-300 border-t-primary mt-auto gap-4">
			@button.Primary(button.Props{
				Size: button.SizeMD,
				Attrs: templ.Attributes{
					"id": "save-btn",
				},
			}) {
				{ pageCtx.T("Save") }
			}
		</div>
	</form>
}

templ New(props *CreateFormProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	@layouts.Authenticated(layouts.AuthenticatedProps{
		BaseProps: layouts.BaseProps{Title: pageCtx.T("Roles.Meta.New.Title")},
	}) {
		@CreateForm(props)
	}
}
