package dashboard

import (
	"github.com/iota-uz/iota-sdk/modules/core/presentation/templates/layouts"
	"github.com/iota-uz/iota-sdk/pkg/composables"
	"github.com/iota-uz/iota-sdk/pkg/lens"
	"github.com/iota-uz/iota-sdk/pkg/lens/executor"
	"github.com/iota-uz/iota-sdk/pkg/lens/ui"
)

type IndexPageProps struct {
	Dashboard       lens.DashboardConfig
	DashboardResult *executor.DashboardResult
}

templ DashboardContent(props *IndexPageProps) {
	<div class="m-6">
		@templ.Raw(ui.GenerateCSS(props.Dashboard.Grid))
		if props.DashboardResult != nil {
			@ui.DashboardWithData(props.Dashboard, props.DashboardResult)
		} else {
			<div class="p-8 text-center">
				<p class="text-gray-600">No database connection available</p>
			</div>
		}
	</div>
}

templ Index(props *IndexPageProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	@layouts.Authenticated(layouts.AuthenticatedProps{
		BaseProps: layouts.BaseProps{Title: pageCtx.T("Dashboard.Meta.Title")},
	}) {
		@DashboardContent(props)
	}
}
