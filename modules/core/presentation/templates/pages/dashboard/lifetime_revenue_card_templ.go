// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package dashboard

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/iota-uz/iota-sdk/components/base"
	"github.com/iota-uz/iota-sdk/components/charts"
	"github.com/iota-uz/iota-sdk/pkg/composables"
)

// Lifetime Revenue Chart
func LifetimeRevenueCard() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		pageCtx := composables.UsePageCtx(ctx)

		chartOptions := charts.ChartOptions{
			Chart: charts.ChartConfig{
				Type:    "bar",
				Height:  "200",
				Toolbar: charts.Toolbar{Show: false},
			},
			Series: []charts.Series{
				{Name: "Доход", Data: []float64{200, 190, 140, 170, 180, 160}},
			},
			XAxis: charts.XAxisConfig{
				Categories: []string{
					"ПО для компании Impex",
					"ПО для компании Impex",
					"Платформа Saas",
					"Платформа Saas",
					"Платформа Saas",
					"ПО для компании Impex",
				},
				Labels: charts.LabelFormatter{
					Style: charts.LabelStyle{
						Colors:   "#CBD5E1",
						FontSize: "10px",
					},
					Show: false,
				},
				AxisBorder: charts.AxisBorder{
					Show: false,
				},
				AxisTicks: charts.AxisTicks{
					Show: false,
				},
			},
			YAxis: charts.YAxisConfig{
				Labels: charts.LabelFormatter{
					Style: charts.LabelStyle{
						Colors:   "#CBD5E1",
						FontSize: "10px",
					},
					Show: false,
				},
			},
			Colors: []string{"#6366F1"},
			PlotOptions: charts.PlotOptions{
				Bar: charts.BarConfig{
					BorderRadius: 4,
					Horizontal:   true,
					BarHeight:    "70%",
					DataLabels: charts.BarLabels{
						Position: "right",
					},
				},
			},
			DataLabels: charts.DataLabels{
				Enabled: true,
				OffsetX: -5,
				Style: charts.DataLabelStyle{
					Colors:     []string{"#FFFFFF"},
					FontSize:   "12px",
					FontWeight: "500",
				},
				Formatter: templ.JSExpression(`function(val, opt) { if (opt && opt.w && opt.w.globals && opt.w.globals.labels && opt.dataPointIndex !== undefined) { return opt.w.globals.labels[opt.dataPointIndex]; } return val; }`),
			},
			Stroke: charts.StrokeConfig{
				Width: 0,
			},
			Grid: charts.GridConfig{
				Show: false,
				Padding: charts.Padding{
					Top:    0,
					Right:  0,
					Bottom: 20,
					Left:   0,
				},
			},
			Legend: charts.LegendConfig{
				Show: false,
			},
			Tooltip: charts.TooltipConfig{
				Enabled: false,
			},
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"md:col-span-1\"><div class=\"bg-white shadow rounded-lg\"><div class=\"p-4 pb-2\"><div class=\"flex justify-between items-center\"><div><h3 class=\"text-sm font-medium text-gray-700\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(pageCtx.T("Dashboard.Charts.LifetimeRevenue.Title"))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `modules/core/presentation/templates/pages/dashboard/lifetime_revenue_card.templ`, Line: 101, Col: 105}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</h3></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<option>2024</option> <option>2023</option> <option>2022</option>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = base.Select(&base.SelectProps{
			Class:       "w-auto text-sm",
			Placeholder: pageCtx.T("Dashboard.Charts.MonthlyIncome.Year"),
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></div><div class=\"p-4\"><div class=\"h-[200px]\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = charts.Chart(charts.Props{Class: "w-full h-[200px]", Options: chartOptions}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><div class=\"flex justify-between text-xs text-gray-500 mt-2 px-2\"><span>10k</span> <span>25k</span> <span>50k</span> <span>100k</span> <span>150k</span> <span>200k</span></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
