package payment_categories

import (
	"fmt"
	"github.com/iota-uz/iota-sdk/components/base/button"
	"github.com/iota-uz/iota-sdk/components/base/dialog"
	"github.com/iota-uz/iota-sdk/components/base/input"
	"github.com/iota-uz/iota-sdk/modules/finance/presentation/controllers/dtos"
	"github.com/iota-uz/iota-sdk/modules/finance/presentation/viewmodels"
	"github.com/iota-uz/iota-sdk/pkg/composables"
)

type DrawerEditProps struct {
	Category *viewmodels.PaymentCategory
	Errors   map[string]string
}

type DrawerCreateProps struct {
	Category dtos.PaymentCategoryCreateDTO
	Errors   map[string]string
}

templ EditDrawer(props *DrawerEditProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	<div id={ fmt.Sprintf("payment-category-drawer-%s", props.Category.ID) }>
		@dialog.StdViewDrawer(dialog.StdDrawerProps{
			ID:     fmt.Sprintf("payment-category-drawer-%s-dialog", props.Category.ID),
			Title:  pageCtx.T("PaymentCategories.Meta.Edit.Title"),
			Action: "open-view-drawer",
			Open:   true,
			Attrs: templ.Attributes{
				"@closing": "window.history.pushState({}, '', '/finance/payment-categories')",
				"@closed":  fmt.Sprintf("document.getElementById('payment-category-drawer-%s').remove()", props.Category.ID),
			},
		}) {
			<form
				id={ fmt.Sprintf("edit-form-%s", props.Category.ID) }
				method="post"
				hx-post={ fmt.Sprintf("/finance/payment-categories/%s", props.Category.ID) }
				hx-target={ fmt.Sprintf("#payment-category-drawer-%s", props.Category.ID) }
				hx-swap="outerHTML"
				class="flex flex-col h-full"
			>
				<div class="flex-1 p-6 space-y-4">
					@input.Text(&input.Props{
						Label: pageCtx.T("PaymentCategories.Single.Name"),
						Attrs: templ.Attributes{
							"value": props.Category.Name,
							"name":  "Name",
						},
						Error: props.Errors["Name"],
					})
					@input.TextArea(&input.TextAreaProps{
						Label: pageCtx.T("PaymentCategories.Single._Description"),
						Attrs: templ.Attributes{
							"name": "Description",
						},
						Value: props.Category.Description,
						Error: props.Errors["Description"],
					})
				</div>
				<div class="p-6 border-t border-gray-200 flex justify-between">
					@button.Danger(button.Props{
						Attrs: templ.Attributes{
							"type":       "button",
							"hx-delete":  fmt.Sprintf("/finance/payment-categories/%s", props.Category.ID),
							"hx-confirm": pageCtx.T("PaymentCategories.Single.DeleteConfirmation"),
							"hx-target":  "body",
							"hx-swap":    "beforeend",
						},
					}) {
						{ pageCtx.T("Delete") }
					}
					<div class="flex gap-3">
						@button.Secondary(button.Props{
							Attrs: templ.Attributes{
								"type":   "button",
								"@click": fmt.Sprintf("document.getElementById('payment-category-drawer-%s-dialog').close()", props.Category.ID),
							},
						}) {
							{ pageCtx.T("Cancel") }
						}
						@button.Primary(button.Props{
							Attrs: templ.Attributes{
								"type":  "submit",
								"name":  "_action",
								"value": "save",
							},
						}) {
							{ pageCtx.T("Save") }
						}
					</div>
				</div>
			</form>
		}
	</div>
}

templ CreateDrawer(props *DrawerCreateProps) {
	{{ pageCtx := composables.UsePageCtx(ctx) }}
	<div id="payment-category-create-drawer">
		@dialog.StdViewDrawer(dialog.StdDrawerProps{
			ID:     "payment-category-create-drawer-dialog",
			Title:  pageCtx.T("PaymentCategories.Meta.New.Title"),
			Action: "open-view-drawer",
			Open:   true,
			Attrs: templ.Attributes{
				"@closing": "window.history.pushState({}, '', '/finance/payment-categories')",
				"@closed":  "document.getElementById('payment-category-create-drawer').remove()",
			},
		}) {
			<form
				id="create-form"
				method="post"
				hx-post="/finance/payment-categories"
				hx-target="#payment-category-create-drawer"
				hx-swap="outerHTML"
				class="flex flex-col h-full"
			>
				<div class="flex-1 p-6 space-y-4">
					@input.Text(&input.Props{
						Label: pageCtx.T("PaymentCategories.Single.Name"),
						Attrs: templ.Attributes{
							"value": props.Category.Name,
							"name":  "Name",
						},
						Error: props.Errors["Name"],
					})
					@input.TextArea(&input.TextAreaProps{
						Label: pageCtx.T("PaymentCategories.Single._Description"),
						Attrs: templ.Attributes{
							"name": "Description",
						},
						Value: props.Category.Description,
						Error: props.Errors["Description"],
					})
				</div>
				<div class="p-6 border-t border-gray-200 flex justify-end gap-3">
					@button.Secondary(button.Props{
						Attrs: templ.Attributes{
							"type":   "button",
							"@click": "document.getElementById('payment-category-create-drawer-dialog').close()",
						},
					}) {
						{ pageCtx.T("Cancel") }
					}
					@button.Primary(button.Props{
						Attrs: templ.Attributes{
							"type":  "submit",
							"name":  "_action",
							"value": "save",
						},
					}) {
						{ pageCtx.T("Save") }
					}
				</div>
			</form>
		}
	</div>
}
